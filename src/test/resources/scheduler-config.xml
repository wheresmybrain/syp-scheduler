<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE scheduler [
        <!ELEMENT scheduler (task-config+)>
        <!ATTLIST scheduler emails CDATA #IMPLIED >
        <!ELEMENT task-config (custom-attributes*)>
        <!ATTLIST task-config
                className CDATA #REQUIRED
                interval (CUSTOM|ONE_TIME|YEARLY|MONTHLY|WEEKLY|DAILY|HOURS|MINUTES|SECONDS|MILLISECONDS) #REQUIRED
                year CDATA #IMPLIED
                monthOfYear (JANUARY|FEBRUARY|MARCH|APRIL|MAY|JUNE|JULY|AUGUST|SEPTEMBER|OCTOBER|NOVEMBER|DECEMBER) #IMPLIED
                dayOfMonth CDATA #IMPLIED
                dayOfWeek (SUNDAY|MONDAY|TUESDAY|WEDNESDAY|THURSDAY|FRIDAY|SATURDAY) #IMPLIED
                dayOccurrence (FIRST|SECOND|THIRD|FOURTH|LAST) #IMPLIED
                hours CDATA #IMPLIED
                minutes CDATA #IMPLIED
                seconds CDATA #IMPLIED
                milliseconds CDATA #IMPLIED
                initialDelayInMillis CDATA #IMPLIED >
        <!ELEMENT custom-attributes EMPTY>
        <!ATTLIST custom-attributes
                name CDATA #IMPLIED
                alwaysFail CDATA #IMPLIED>
        ]>

<!--
    This is the configuration file for BootstrapTest.
    The DTD configuration above ensures the correct syntax of the <task-config> declarations below.
-->

<!-- Emails (optionally) defined at top level are automatically set as support addresses on all the tasks (if using ErrorReporter) -->
<scheduler emails="chris.mcfarland@gmail.com">

    <!-- TEST EXAMPLE #1: Custom recurring task prints the state of the SypScheduler every minute after an initial second delay -->
    <task-config className="com.wheresmybrain.syp.scheduler.testtasks.LogSchedulerState" interval="CUSTOM" initialDelayInMillis="1000"/>

    <!-- TEST EXAMPLE #2: AlwaysFailTask task executes every 5 seconds to demonstrate (and test) the event handling mechanism.
         INSTRUCTIONS:
         - See AlwaysFailTask javadoc for an explanation.
         - Set alwaysFail="true" to make this task fail consecutively and cause a Cancel Event to be thrown.
         - Comment out this <task-config> if you don't want it to run.
    -->
    <task-config className="com.wheresmybrain.syp.scheduler.testtasks.AlwaysFailTask" interval="SECONDS" seconds="5">
        <custom-attributes alwaysFail="true"/>
    </task-config>

    <!-- TEST EXAMPLE #3: Demonstrates how the same TimingTest task can be scheduled to run on different intervals:
         INSTRUCTIONS:
         - The TimingTest task shows the accuracy of the scheduler by printing the actual interval between runs.
         - Modify the "DAILY INTERVAL" and "WEEKLY INTERVAL" configs below to run at specific time/day.
         - Comment out any of the <task-config> declarations you don't want to run.
         - See TimingTest javadoc for more information.
    -->
    <task-config className="com.wheresmybrain.syp.scheduler.testtasks.TimingTest" interval="SECONDS" seconds="45" initialDelayInMillis="100">
        <custom-attributes name="45 SECOND INTERVAL"/>
    </task-config>
    <task-config className="com.wheresmybrain.syp.scheduler.testtasks.TimingTest" interval="MINUTES" minutes="2" initialDelayInMillis="200">
        <custom-attributes name="2 MINUTE INTERVAL"/>
    </task-config>
    <task-config className="com.wheresmybrain.syp.scheduler.testtasks.TimingTest" interval="HOURS" hours="1" initialDelayInMillis="300">
        <custom-attributes name="1 HOUR INTERVAL"/>
    </task-config>
    <task-config className="com.wheresmybrain.syp.scheduler.testtasks.TimingTest" interval="DAILY" hours="8" minutes="43" seconds="00" initialDelayInMillis="400">
        <custom-attributes name="DAILY INTERVAL"/>
    </task-config>
    <task-config className="com.wheresmybrain.syp.scheduler.testtasks.TimingTest" interval="WEEKLY" dayOfWeek="THURSDAY" hours="8" minutes="44" initialDelayInMillis="500">
        <custom-attributes name="WEEKLY INTERVAL"/>
    </task-config>
    <!--  >>> comment this one out if you don't want to see a message every second <<<
    <task-config className="com.wheresmybrain.syp.scheduler.testtasks.TimingTest" interval="MILLISECONDS" milliseconds="999" initialDelayInMillis="0">
        <custom-attributes name="999 MILLISECOND INTERVAL"/>
    </task-config>
     -->

    <!-- TEST EXAMPLE #4: Demonstrates how the same DateTime task can be scheduled to run only once, or on a longer (monthly, yearly) interval:
         INSTRUCTIONS:
         - The task configurations below need to be set to a particular day/time.
         - Modify these task configurations to execute soon and close together.
    -->
    <task-config className="com.wheresmybrain.syp.scheduler.testtasks.DateTimeTask" interval="ONE_TIME" initialDelayInMillis="63000">
        <custom-attributes name="ONE_TIME #1"/>
    </task-config>
    <task-config className="com.wheresmybrain.syp.scheduler.testtasks.DateTimeTask" interval="ONE_TIME" year="2017" monthOfYear="NOVEMBER" dayOfMonth="23" hours="8" minutes="45">
        <custom-attributes name="ONE_TIME #2"/>
    </task-config>
    <task-config className="com.wheresmybrain.syp.scheduler.testtasks.DateTimeTask" interval="MONTHLY" dayOfMonth="23" hours="8" minutes="46">
        <custom-attributes name="MONTHLY #1"/>
    </task-config>
    <task-config className="com.wheresmybrain.syp.scheduler.testtasks.DateTimeTask" interval="MONTHLY" dayOfMonth="LAST_DAY_OF_MONTH-7" hours="8" minutes="47">
        <custom-attributes name="MONTHLY #2"/>
    </task-config>
    <task-config className="com.wheresmybrain.syp.scheduler.testtasks.DateTimeTask" interval="MONTHLY" dayOfWeek="THURSDAY" dayOccurrence="FOURTH" hours="8" minutes="48">
        <custom-attributes name="MONTHLY #3"/>
    </task-config>
    <task-config className="com.wheresmybrain.syp.scheduler.testtasks.DateTimeTask" interval="MONTHLY" dayOfWeek="TUESDAY" dayOccurrence="LAST" hours="14" minutes="08">
        <custom-attributes name="MONTHLY #4"/>
    </task-config>
    <task-config className="com.wheresmybrain.syp.scheduler.testtasks.DateTimeTask" interval="YEARLY" monthOfYear="NOVEMBER" dayOfMonth="23" hours="8" minutes="49">
        <custom-attributes name="YEARLY"/>
    </task-config>

</scheduler>